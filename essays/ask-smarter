---
layout: essay
type: essay
title: "Don't Be _That_ Person: Ask Smarter, Not Harder"
# All dates must be YYYY-MM-DD format!
date: 2024-09-12
published: true
labels:
  - Software Engineering
  - Smart Questions
  - Stack Overflow
---
## Stuck? Time to Ask the Internet!
Everyone has come across some variation of this problem- you’re completing some type of task, whether it be compiling code, putting together furniture, or maybe you’re even going through a midlife crisis, when you realize that there’s something you need dire help with. Because we are now in an age where we rely heavily on technology, I know that many people, including myself, usually turn to online forums like Reddit or Stack Overflow for help from online users. 

I think that sites like Reddit or Stack Overflow are Godsend- not only can you find answers to common questions, but also answers to the most niche questions possible, like “What happens to the cord on animals where there's no one to cut it?” or “Is there a repository of house CAD files that can be used for energy simulations?”. Although these forums are great, highly accessible resources to find help, not all questions lead to helpful answers, and results can be reliant on the quality of the question asked. 

// Smart Questions = Better Answers

In the context of coding, asking meaningful, well thought-out questions is essential both for questioners and answers of the present and future. Asking Smart questions usually resulted in equally helpful answers, and typically had a lot of upvotes. This is essential to getting your question answered, as well as respecting a hacker’s time and effort by helping you. It is also extremely helpful for someone who has the same question as you later in time. I find that this would increase efficiency and save both your own time and the time of other users. It also makes for a better learning experience as there would be better feedback and a better attitude of users answering your questions, which cultivates a supportive and engaging community atmosphere. A comfortable learning environment is essential to learning- would you ever feel like you’re performing your best when in a classroom with an instructor that gives terrible feedback and berates you?

// Lazy Questions, Lazy Results

The transaction of asking and answering questions can be represented by “Play stupid games, win stupid prizes.” I found that asking questions in a lazy, low-effort often received answers of the same quality. An example of this can be seen [here](https://stackoverflow.com/questions/44193380/what-does-operator-do). User djred678 is asking a question that can easily be answered with a simple Google search, not to mention that it has already been asked in the forum previously. “I can't seem to find any explanation for this” is a lazy way to explain why you need help- the question was asked in 2017! I imagine that anyone who saw this new question come up on their feed were annoyed, and many actually were, because the comments clearly state that the question was very low-effort and lazy. An individual who did answer did argue that they were simply just helping someone who had a question and that being abrasive wouldn’t be helpful. I think it’s safe to assume that asking these questions creates a very hostile environment that doesn’t help anyone.

// Smart Questions: The Secret Sauce to a Great Learning Environment

On the contrary, smart questions are great to help others and create an inclusive and efficient learning environment. In my smart question example, you can see that there’s a lot of helpful discussions going on in the comments that support learning and understanding of the issue at hand. In addition, the many upvotes/popularity of the post will definitely help someone who might have the same question in the future.

In the end, asking smart, thoughtful questions isn't just about getting your answer quickly—it's about respecting the time and effort of the people helping you, and spreading positivity to create a safe, collaborative learning environment. Whether you’re coding, fixing a bike, or just dealing with life’s little quirks, putting some effort into how you ask for help can make all the difference. A well-asked question is like a key that unlocks valuable insights, not just for you, but for anyone who comes across it later. So next time you're stuck, take a moment to frame your question carefully—you'll thank yourself, and so will everyone else.



<p align="center">
  <img width="1502" height="1048" src="https://github.com/dianathreis/dianathreis.github.io/blob/main/img/smart-questions/dumb-question.jpg">
</p>
